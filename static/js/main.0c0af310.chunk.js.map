{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["createWeb3","a","window","ethereum","web3","Web3","enable","console","log","App","useState","setWeb3","accounts","setAccounts","balance","setBalance","votingContract","setContract","candidate","setCandidate","candidates","setCandidates","disable","setDisable","loading","setLoading","show","setShow","vote","e","preventDefault","methods","target","value","send","from","result","location","reload","addCandidate","CandidatesList","listCandidates","map","obj","index","id","name","votes","Button","disabled","onClick","AlertTransaction","Alert","variant","onClose","dismissible","Heading","Spinner","animation","size","useEffect","_web3","_accounts","selectedAddress","eth","getBalance","_balance","net","getId","networkId","contractNetwork","Voting","networks","contract","Contract","abi","address","alert","initContract","showCandidates","call","list","candidatesArray","i","length","fetchData","Container","className","Row","Col","href","onSubmit","InputGroup","FormControl","placeholder","onChange","type","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c0af310.chunk.js","sourcesContent":["import { Container, Row, Col, InputGroup, Button, FormControl, Spinner, Alert } from 'react-bootstrap'\nimport './style.css'\nimport React, {useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport Voting from './build/contracts/Voting.json'\n\nasync function createWeb3() {\n  // Modern dapp browsers...\n  if (window.ethereum) {\n      const web3 = new Web3(\n        window.ethereum\n      );\n\n      try {\n          // Request account access if needed\n          await window.ethereum.enable();\n      } catch (error) {\n          // User denied account access...\n      }\n\n      return web3;\n  }\n  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  return null;\n}\n\nfunction App() {\n\n  const [web3, setWeb3] = useState();\n  const [accounts, setAccounts] = useState();\n  const [balance, setBalance] = useState();\n  const [votingContract, setContract ] = useState();\n  const [candidate, setCandidate] = useState();\n  const [candidates, setCandidates ] = useState();\n  const [disable, setDisable] = useState(false); \n  const [loading, setLoading] = useState(true);\n  const [show, setShow] = useState(false);\n\n\n  useEffect(() => {\n    if (web3) {\n        return;\n    }\n    (async () => {\n        const _web3 = await createWeb3();\n        setWeb3(_web3);\n  \n        const _accounts = [window.ethereum.selectedAddress];\n        setAccounts(_accounts);\n  \n        if (_accounts && _accounts[0]) {\n            const _balance = await _web3.eth.getBalance(_accounts[0]);\n            setBalance(_balance);\n        }\n    })();\n  },[web3]);\n\n  useEffect(() => {\n    if(web3) initContract();\n      async function initContract(){\n        const networkId = await web3.eth.net.getId();\n        const contractNetwork = Voting.networks[networkId]\n        if(contractNetwork){\n          const contract = new web3.eth.Contract(Voting.abi, contractNetwork.address);\n          setContract(contract);\n        }\n        else{\n          window.alert('Token contract not deployed to detected network. Use Rinkeby Testnet instead!')\n        } \n      }\n  }, [web3]);\n\n  useEffect(() => {\n    if(votingContract){\n      fetchData();\n    }\n\n    async function fetchData(){\n        const list = await votingContract.methods.showCandidates().call();\n        var candidatesArray = [];\n        for(var i = 0; i<list.length; i++){\n          candidatesArray[i] = {\"id\": list[i][0], \"name\": list[i][1], \"votes\": list[i][2]}\n          //candidatesArray[i] = [list[i][0], list[i][1], list[i][2]]\n        }\n        setCandidates(candidatesArray);\n        setLoading(false);\n    }\n  }, [votingContract])\n\n\n  function handleChange(e) {\n    setCandidate(e.target.value)\n  }\n\n  async function vote(e) {\n    e.preventDefault();\n    setDisable(true);\n    setShow(true);\n    const result = await votingContract.methods.vote(e.target.value).send({\n      from: accounts[0],\n    })\n\n    window.location.reload()\n\n    console.log(result);\n\n  }\n\n\n  async function addCandidate(e) {\n    setDisable(true);\n    e.preventDefault();\n    setShow(true);\n\n    const result = await votingContract.methods.addCandidate(candidate).send({\n      from: accounts[0],\n    })\n\n    window.location.reload()\n\n    console.log(result)\n  }\n\n\n  function CandidatesList() {\n    if(candidates){\n    const listCandidates = candidates.map((obj, index) => {\n        return(\n          <div key={index}>id:{obj.id} name:{obj.name} votes:{obj.votes} <Button disabled={disable} onClick={vote} value={obj.id}>Vote</Button></div>\n        )\n    });\n\n    return (\n      <div>{listCandidates}</div>\n    );\n    }\n    else return(\n      <div></div>\n    );\n  }\n\n\n  function AlertTransaction() {\n    if (show) {\n      return (\n        <Alert variant=\"warning\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>Transaction in progress...</Alert.Heading>\n          <p>This may take a while!</p><Spinner animation=\"border\" size=\"sm\" />\n        </Alert>\n      )\n    }\n    if (!show) return (<div></div>)\n  }\n\n\n\nif(loading === false){\n  return (\n    <div>\n      <Container className='content'>\n        <Row>\n        <Col></Col>\n        <Col><h1>ETH Voting Dapp</h1></Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col><h6 className=\"info\">Rinkeby Testnet version, app made by el-tumero</h6></Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col><p>Github repo: <a href=\"https://github.com/el-tumero/ethvoting\">https://github.com/el-tumero/ethvoting</a></p></Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col><h5>Your ETH address: {accounts?.[0]}</h5></Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col><h6>Your ETH funds: {balance/1000000000000000000} ETH</h6></Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col><h2>Vote for a candidate:</h2></Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col>\n        <CandidatesList />\n        </Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col><h3>Add a candidate: </h3></Col>\n        <Col></Col>\n        </Row>\n        <Row>\n        <Col></Col>\n        <Col>\n        <form onSubmit={addCandidate}>\n        <InputGroup className=\"mb-3\">\n          <FormControl placeholder=\"Candidate name\" onChange={handleChange} />\n          <Button id=\"button-addon2\" disabled={disable} type=\"submit\">\n            Add\n          </Button>\n        </InputGroup>\n        </form>\n        </Col>\n        <Col></Col>\n        </Row>\n        <Row>\n          <Col></Col>\n          <Col><AlertTransaction></AlertTransaction></Col>\n          <Col></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n  }\n  if(loading === true){\n    return(\n      <div>\n        <Container className='content'>\n          <Row>\n            <Col />\n            <Col>\n            <Spinner className=\"loader\" animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n            </Col>\n            <Col />\n          </Row>\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}